digraph "Converting Keras to MDF" {
	graph [rankdir=LR]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	"input layer" [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>input layer</b></td></tr><tr><td><font color="#1666ff">input_layer</font> = input_array</td></tr><tr><td><font color="#cc3355">output</font> = <font color="#1666ff">input_layer</font> </td></tr></table>>]
	node [color="#cccccc" fontcolor="#444444" penwidth=2 shape=box style=rounded]
	dense_layer [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>dense_layer</b></td></tr><tr><td><i>color = .8 .8 .8</i></td></tr><tr><td><font color="#188855">input</font> </td></tr><tr><td><font color="#1666ff">dense_weight</font> = [[ 0.2579606  ...  0.45680785] ... [-0.231131   ... -0.31649703]] (NP (8, 22) float32)</td></tr><tr><td><font color="#1666ff">dense_bias</font> = [ 0.0219503  ... -0.04655223] (NP (22,) float32)</td></tr><tr><td><font color="#1666ff">feedForward</font> = (<font color="#1666ff">dense_weight</font>) + <font color="#1666ff">dense_bias</font></td></tr><tr><td><font color="#cc3355">dense_output</font> = <font color="#1666ff">feedForward</font> trained network </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	dense_activation [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>dense_activation</b></td></tr><tr><td><font color="#188855">input</font> </td></tr><tr><td><font color="#1666ff">relu</font> = <font color="#188855">input</font>*<font color="#188855">input</font><br/><i>test: </i>IF relu=0 THEN <font color="#1666ff">relu</font>=<font color="#1666ff">relu</font></td></tr><tr><td><font color="#cc3355">activate_1</font> = <font color="#1666ff">relu</font> </td></tr></table>>]
	node [color="#cccccc" fontcolor="#444444" penwidth=2 shape=box style=rounded]
	dense1_layer [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>dense1_layer</b></td></tr><tr><td><i>color = .8 .8 .8</i></td></tr><tr><td><font color="#188855">input</font> </td></tr><tr><td><font color="#1666ff">dense1_weight</font> = [[-0.21294375 ... -0.2272497 ] ... [ 0.35217905 ... -0.02028348]] (NP (22, 8) float32)</td></tr><tr><td><font color="#1666ff">dense1_bias</font> = [ 0.         ... -0.06042108] (NP (8,) float32)</td></tr><tr><td><font color="#1666ff">feedForward</font> = (<font color="#1666ff">dense1_weight</font>) + <font color="#1666ff">dense1_bias</font></td></tr><tr><td><font color="#cc3355">dense1_output</font> = <font color="#1666ff">feedForward</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	dense1_activation [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>dense1_activation</b></td></tr><tr><td><font color="#188855">input</font> </td></tr><tr><td><font color="#1666ff">relu</font> = <font color="#188855">input</font>*<font color="#188855">input</font><br/><i>test: </i>IF relu=1 THEN <font color="#1666ff">relu</font>=<font color="#1666ff">relu</font></td></tr><tr><td><font color="#cc3355">activate_2</font> = <font color="#1666ff">relu</font> </td></tr></table>>]
	node [color="#cccccc" fontcolor="#444444" penwidth=2 shape=box style=rounded]
	dense2_layer [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>dense2_layer</b></td></tr><tr><td><i>color = .8 .8 .8</i></td></tr><tr><td><font color="#188855">input</font> </td></tr><tr><td><font color="#1666ff">dense2_weight</font> = [[ 0.04895878] ... [-0.13329287]] (NP (8, 1) float32)</td></tr><tr><td><font color="#1666ff">dense2_bias</font> = [-0.09655307] (NP (1,) float32)</td></tr><tr><td><font color="#1666ff">feedForward</font> = (<font color="#1666ff">dense2_weight</font>) + <font color="#1666ff">dense2_bias</font></td></tr><tr><td><font color="#cc3355">dense2_output</font> = <font color="#1666ff">feedForward</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	dense2_activation [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>dense2_activation</b></td></tr><tr><td><font color="#188855">input</font> </td></tr><tr><td><font color="#1666ff">sigmoid</font> = 1/(1 + (2.71828**(-<font color="#188855">input</font>)))</td></tr><tr><td><font color="#cc3355">activate_2</font> = <font color="#1666ff">sigmoid</font> </td></tr></table>>]
	node [color="#cccccc" fontcolor="#444444" penwidth=2 shape=box style=rounded]
	dense3_layer [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>dense3_layer</b></td></tr><tr><td><i>color = .8 .8 .8</i></td></tr><tr><td><font color="#188855">input</font> </td></tr><tr><td><font color="#1666ff">dense3_weight</font> = [[ 0.2579606  ...  0.45680785] ... [-0.231131   ... -0.31649703]] (NP (8, 22) float32)</td></tr><tr><td><font color="#1666ff">dense3_bias</font> = [ 0.0219503  ... -0.04655223] (NP (22,) float32)</td></tr><tr><td><font color="#1666ff">feedForward</font> = (<font color="#1666ff">dense3_weight</font>) + <font color="#1666ff">dense3_bias</font></td></tr><tr><td><font color="#cc3355">dense3_output</font> = <font color="#1666ff">feedForward</font> trained network </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	dense3_activation [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>dense3_activation</b></td></tr><tr><td><font color="#188855">input</font> </td></tr><tr><td><font color="#1666ff">relu</font> = <font color="#188855">input</font>*<font color="#188855">input</font><br/><i>test: </i>IF relu=0 THEN <font color="#1666ff">relu</font>=<font color="#1666ff">relu</font></td></tr><tr><td><font color="#cc3355">activate_4</font> = <font color="#1666ff">relu</font> </td></tr></table>>]
	node [color="#cccccc" fontcolor="#444444" penwidth=2 shape=box style=rounded]
	dense4_layer [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>dense4_layer</b></td></tr><tr><td><i>color = .8 .8 .8</i></td></tr><tr><td><font color="#188855">input</font> </td></tr><tr><td><font color="#1666ff">dense4_weight</font> = [[0.34924728] ... [0.4363091 ]] (NP (12, 1) float32)</td></tr><tr><td><font color="#1666ff">dense4_bias</font> = [0.43238705] (NP (1,) float32)</td></tr><tr><td><font color="#1666ff">feedForward</font> = (<font color="#1666ff">dense4_weight</font>) + <font color="#1666ff">dense4_bias</font></td></tr><tr><td><font color="#cc3355">dense4_output</font> = <font color="#1666ff">feedForward</font> </td></tr></table>>]
	node [color="#444444" fontcolor="#444444" penwidth=1 shape=box style=rounded]
	dense2_activation [label=<<table border="0" cellborder="0"><tr><td colspan="2"><b>dense2_activation</b></td></tr><tr><td><font color="#188855">input</font> </td></tr><tr><td><font color="#1666ff">sigmoid</font> = 1/(1 + (2.71828**(-<font color="#188855">input</font>)))</td></tr><tr><td><font color="#cc3355">activate_2</font> = <font color="#1666ff">sigmoid</font> </td></tr></table>>]
	"input layer" -> dense_layer [label=<edge_input layer_dense_layer (<font color="#cc3355">output</font> -&gt; <font color="#188855">input</font>)> arrowhead=empty]
	dense_layer -> dense_activation [label=<edge_dense_layer_dense_activation (<font color="#cc3355">dense_output</font> -&gt; <font color="#188855">input</font>)> arrowhead=empty]
	dense_activation -> dense1_layer [label=<edge_dense_activation_dense1_layer (<font color="#cc3355">activate_1</font> -&gt; <font color="#188855">input</font>)> arrowhead=empty]
	dense1_layer -> dense1_activation [label=<edge_dense1_layer_dense1_activation (<font color="#cc3355">dense1_output</font> -&gt; <font color="#188855">input</font>)> arrowhead=empty]
	dense1_activation -> dense2_layer [label=<edge_dense1_activation_dense2_layer (<font color="#cc3355">activate_2</font> -&gt; <font color="#188855">input</font>)> arrowhead=empty]
	dense2_layer -> dense2_activation [label=<edge_dense2_layer_dense2_activation (<font color="#cc3355">dense2_output</font> -&gt; <font color="#188855">input</font>)> arrowhead=empty]
	dense2_activation -> dense3_layer [label=<edge_dense2_activation_dense3_layer (<font color="#cc3355">activate_2</font> -&gt; <font color="#188855">input</font>)> arrowhead=empty]
	dense3_layer -> dense3_activation [label=<edge_dense3_layer_dense3_activation (<font color="#cc3355">dense3_output</font> -&gt; <font color="#188855">input</font>)> arrowhead=empty]
	dense3_activation -> dense4_layer [label=<edge_dense3_activation_dense4_layer (<font color="#cc3355">activate_4</font> -&gt; <font color="#188855">input</font>)> arrowhead=empty]
	dense4_layer -> dense4_activation [label=<edge_dense4_layer_dense4_activation (<font color="#cc3355">dense4_output</font> -&gt; <font color="#188855">input</font>)> arrowhead=empty]
}
